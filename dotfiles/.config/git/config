[pull]
  rebase = false
  autoStash = true
[push]
  autoSetupRemote = true
[rebase]
  autoStash = true
[mergetool]
  prompt = false
  keepBackup = false
  keepTemporaries = false
[merge]
  autosStash = true
  tool = nvim_diffview
[mergetool "nvim_diffview"]
  cmd = NVIM_APPNAME=lazyvim nvim -c 'DiffviewOpen'
[alias]
  ; mranch = !git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4
  ; mranch = !git ls-remote --symref origin HEAD
  mranch = branch -l main master --format '%(refname:short)'
  ma = "!f() { git switch $(git mranch); git pull; }; f"
  ; fresh = !git fetch origin $(git mranch):$(git mranch) && git merge $(git mranch) 
  stash-pull = "!f() { stash_me=$(git stash save 'on-fresh'); stashed=$(echo $stash_me|grep 'on-fresh'); git pull; if [ '$stashed' ]; then git stash pop; fi; }; f"
  fresh = "!f() { stash_me=$(git stash save 'on-fresh'); stashed=$(echo $stash_me|grep 'on-fresh'); git fetch origin $(git mranch):$(git mranch); git merge $(git mranch) --no-edit; if [ '$stashed' ]; then git stash pop; fi; }; f"
  fresh-b = "!f() { git switch $(git mranch) && git pull && git checkout -b $1; }; f"
  swibr = "!f() { stash_me=$(git stash save 'on-switch'); stashed=$(echo $stash_me|grep 'on-switch'); git switch $1; if [ '$stashed' ]; then git stash pop; fi; }; f"
  reset-one = !git checkout origin/$(git mranch)
  merge-no-more=merge --no-commit --no-ff
  nuke = !git rebase --abort & git reset --hard && git clean -fd
  ; tree = log --graph --abbrev-commit --decorate=no --date=format:'%Y-%m-%d %H:%I' --format=format:'%C(dim white)%>|(26)%h%C(reset)  %C(green)%ad%C(reset)  %C(blue)%<(16,trunc)%an%C(reset)  %C(bold 1)%d%C(reset) %C(bold white)%>|(1)%s%C(reset)' --all
  tree = log --graph --abbrev-commit --decorate=no --date=format:'%Y-%m-%d %H:%I' --format=format:'%C(auto)%>|(20)%<(20)%d%C(reset)  %C(auto)%>|(20)%<(20)%s%C(reset)  %C(blue)%>|(-32)%an%C(reset)  %C(magenta)%>|(-14)%ad%C(reset)  %C(dim white)%>|(-1)%h%C(reset) %n' --all
  full-tree = log --graph --date=format:'%Y-%m-%d %H:%I' --format=tformat:'%C(auto)%>|(10)%<(20)%d%C(reset) %C(dim white)%>|(12)%<(20)%h%C(reset)  %C(magenta)%ad%C(reset)  %C(bold blue)%aN%C(reset)%w(0,0,9)%n %C(yellow)%s%w(0,0,10)%n%n%C(white)%b%C(reset) %n'

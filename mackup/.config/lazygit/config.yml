# https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md
gui:
  sidePanelWidth: 0.2 # gives you more space to show things side-by-side
  showFileTree: false
  showCommandLog: false
  showRandomTip: false
  nerdFontsVersion: "3"
  border: hidden
  theme:
    activeBorderColor:
      - "#89b4fa"
      - bold
    inactiveBorderColor:
      - "black"
    optionsTextColor:
      - "#89b4fa"
    selectedLineBgColor:
      - "#313244"
    cherryPickedCommitBgColor:
      - "#45475a"
    cherryPickedCommitFgColor:
      - "#89b4fa"
    unstagedChangesColor:
      - "#f38ba8"
    defaultFgColor:
      - "#cdd6f4"
    searchingActiveBorderColor:
      - "#f9e2af"
  authorColors:
    "Artem Kolomeetc": "yellow"
    "*": "#b4befe"
  spinner:
    frames:
      - ▉
      - ▊
      - ▋
      - ▌
      - ▍
      - ▎
      - ▏
      - ▎
      - ▍
      - ▌
      - ▋
      - ▊
      - ▉
    # The "speed" of the spinner in milliseconds.
    rate: 50
keybinding:
  universal:
    openFile: <disabled>
  files:
    toggleTreeView: "t" # overrides global "t" to take theirs
    refreshFiles: "o" #  overrides global "o" to take ours by mistake
    commitChangesWithEditor: <disabled>
git:
  # list of branches that are considered 'main' branches, used when displaying commits
  mainBranches:
    - master
    - main
  paging:
    colorArg: never
    pager: ydiff -p cat -s --wrap --width={{columnWidth}}
notARepository: quit
customCommands:
  # command contexts
  # https://github.com/jesseduffield/lazygit/blob/master/docs/Custom_Command_Keybindings.md#contexts
  - key: "P"
    command: "git push {{.SelectedRemote.Name}} {{.SelectedLocalCommit.Sha}}:{{.SelectedLocalBranch.Name}}"
    context: "commits"
    loadingText: "Pushing commit..."
    description: "Push a specific commit (and any preceding)"
    stream: yes
  - key: "E"
    description: "Add empty commit"
    context: "commits"
    command: 'git commit --allow-empty -m "empty commit"'
    loadingText: "Committing empty commit..."
  - key: "F"
    description: "fetch a remote branch as a new local branch"
    command: "git fetch {{index .SelectedRemote.Name }} {{index .PromptResponses 0}}:{{index .PromptResponses 1}}"
    context: "remotes"
    prompts:
      - type: "input"
        title: "Remote Branch Name"
        initialValue: ""
      - type: "input"
        title: "New Local Branch Name"
        initialValue: ""
    loadingText: "fetching branch"
  # retrieved from: https://github.com/jesseduffield/lazygit/wiki/Custom-Commands-Compendium#conventional-commit
  - key: "C"
    context: "files"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Scope"
        key: "Scope"
        initialValue: ""
      - type: "input"
        title: "Message"
        key: "Message"
        initialValue: ""
      - type: "input"
        title: "Work Item"
        key: "WorkItem"
        initialValue: "AMNISPHR25-"
      # - type: "confirm"
      #   key: "Confirm"
      #   title: "Commit"
      #   body: "Are you sure you want to commit?"
    command: "git commit --message '{{.Form.Type}}{{ if .Form.Scope }}({{ .Form.Scope }}){{ end }}: {{.Form.Message}} {{ if .Form.WorkItem }}[{{ .Form.WorkItem }}]{{ end }}'"
    loadingText: "Creating conventional commit..."
  - key: "N"
    context: "localBranches"
    description: "Create new conventional branch"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "feature"
            description: "A new feature under development"
            value: "feature/AMNISPHR25-"
          - name: "bugfix"
            description: "A dedicated assigned bug fix"
            value: "bugfix/AMNISPHR25-"
          - name: "hotfix"
            description: "A hotfix of broken functionality"
            value: "hotfix/AMNISPHR25-"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "release"
            description: "A new release branch"
            value: "release/AMNISPHR25-"
      - type: "input"
        title: "Branch name"
        key: "BranchName"
        initialValue: "{{.Form.Type}}"
    command: "git checkout -b '{{.Form.BranchName}}'"
    loadingText: "Creating new conventional branch..."
  - key: "n"
    context: "files"
    description: "Commit with no hooks"
    prompts:
      - type: "input"
        title: "Message (no-verify)"
        key: "Message"
        initialValue: "WIP:"
    command: "git commit --no-verify --message '{{.Form.Message}}'"
    loadingText: "git commit --no-verify..."
  - key: "u"
    command: "git mergetool {{ .SelectedFile.Name }}"
    context: "files"
    loadingText: "opening git mergetool"
    subprocess: true
  - key: "t"
    command: "git checkout --theirs {{ .SelectedFile.Name }}"
    context: "global"
    loadingText: "take theirs"
  - key: "o"
    command: "git checkout --ours {{ .SelectedFile.Name }}"
    context: "global"
    loadingText: "take ours"
